{"version":3,"sources":["../src/handoff.js"],"names":["getOpenQueues","session","base_url","_hubtype_api","queues_url","bot_id","bot","id","headers","Authorization","_access_token","method","url","data","resp","humanHandOff","queue_name","on_finish","params","path","payload","_botonic_action","storeCaseRating","rating","chat_id","user"],"mappings":";;;;;;;;;;;;;;;AAAA;;SAEsBA,a;;;;;;;+BAAf,iBAA6BC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,QADC,GACUD,OAAO,CAACE,YAAR,IAAwB,yBADlC;AAECC,YAAAA,UAFD,aAEiBF,QAFjB;AAGDG,YAAAA,MAHC,GAGQJ,OAAO,CAACK,GAAR,CAAYC,EAHpB;AAAA;AAAA,mBAIY,uBAAM;AACrBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYR,OAAO,CAACS,aAApB;AADN,eADY;AAIrBC,cAAAA,MAAM,EAAE,MAJa;AAKrBC,cAAAA,GAAG,EAAER,UALgB;AAMrBS,cAAAA,IAAI,EAAE;AAAER,gBAAAA,MAAM,EAANA;AAAF;AANe,aAAN,CAJZ;;AAAA;AAIDS,YAAAA,IAJC;AAAA,6CAYEA,IAAI,CAACD,IAZP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAeeE,Y;;;;;;;+BAAf,kBAA4Bd,OAA5B,EAAqCe,UAArC,EAAiDC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,YAAAA,MADC,yBACuBF,UADvB;;AAEL,gBAAIC,SAAJ,EAAe;AACb,kBAAIA,SAAS,CAACE,IAAd,EAAoBD,MAAM,+BAAwBD,SAAS,CAACE,IAAlC,CAAN,CAApB,KACK,IAAIF,SAAS,CAACG,OAAd,EAAuBF,MAAM,eAAQD,SAAS,CAACG,OAAlB,CAAN;AAC7B;;AACDnB,YAAAA,OAAO,CAACoB,eAAR,GAA0BH,MAA1B;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SASeI,e;;;;;;;+BAAf,kBAA+BrB,OAA/B,EAAwCsB,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACDrB,YAAAA,QADC,GACUD,OAAO,CAACE,YAAR,IAAwB,yBADlC;AAEDqB,YAAAA,OAFC,GAESvB,OAAO,CAACwB,IAAR,CAAalB,EAFtB;AAAA;AAAA,mBAIY,uBAAM;AACrBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYR,OAAO,CAACS,aAApB;AADN,eADY;AAIrBC,cAAAA,MAAM,EAAE,MAJa;AAKrBC,cAAAA,GAAG,YAAKV,QAAL,uBAA0BsB,OAA1B,wBALkB;AAMrBX,cAAAA,IAAI,EAAE;AAAEW,gBAAAA,OAAO,EAAPA,OAAF;AAAWD,gBAAAA,MAAM,EAANA;AAAX;AANe,aAAN,CAJZ;;AAAA;AAIDT,YAAAA,IAJC;AAAA,8CAYEA,IAAI,CAACD,IAZP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios'\n\nexport async function getOpenQueues(session) {\n  let base_url = session._hubtype_api || 'https://api.hubtype.com'\n  const queues_url = `${base_url}/v1/queues/get_open_queues/`\n  let bot_id = session.bot.id\n  let resp = await axios({\n    headers: {\n      Authorization: `Bearer ${session._access_token}`\n    },\n    method: 'post',\n    url: queues_url,\n    data: { bot_id }\n  })\n  return resp.data\n}\n\nexport async function humanHandOff(session, queue_name, on_finish) {\n  let params = `create_case:${queue_name}`\n  if (on_finish) {\n    if (on_finish.path) params += `:__PATH_PAYLOAD__${on_finish.path}`\n    else if (on_finish.payload) params += `:${on_finish.payload}`\n  }\n  session._botonic_action = params\n}\n\nexport async function storeCaseRating(session, rating) {\n  let base_url = session._hubtype_api || 'https://api.hubtype.com'\n  let chat_id = session.user.id\n\n  let resp = await axios({\n    headers: {\n      Authorization: `Bearer ${session._access_token}`\n    },\n    method: 'post',\n    url: `${base_url}/v1/chats/${chat_id}/store_case_rating/`,\n    data: { chat_id, rating }\n  })\n  return resp.data\n}\n"],"file":"handoff.js"}