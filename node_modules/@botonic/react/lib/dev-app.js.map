{"version":3,"sources":["../src/dev-app.jsx"],"names":["DevApp","theme","persistentMenu","blockInputs","emojiPicker","onInit","onOpen","onClose","onMessage","botOptions","bot","ReactBot","dest","optionsAtRuntime","webchatOptions","webchatRef","stringId","session","getString","locale","setLocale","onInitWebchat","onOpenWebchat","onCloseWebchat","onUserInput","input","lastRoutePath","from","message","resp","response","map","r","current","addBotResponse","WebchatApp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\n\nimport { ReactBot } from './react-bot'\nimport { WebchatApp } from './webchat-app'\nimport { WebchatDev } from './webchat'\n\nexport class DevApp extends WebchatApp {\n  constructor({\n    theme = {},\n    persistentMenu,\n    blockInputs,\n    emojiPicker,\n    onInit,\n    onOpen,\n    onClose,\n    onMessage,\n    ...botOptions\n  }) {\n    super({\n      theme,\n      persistentMenu,\n      blockInputs,\n      emojiPicker,\n      onInit,\n      onOpen,\n      onClose,\n      onMessage\n    })\n    this.bot = new ReactBot({\n      ...botOptions\n    })\n  }\n\n  render(dest, optionsAtRuntime = {}) {\n    let {\n      theme = {},\n      persistentMenu,\n      blockInputs,\n      emojiPicker,\n      onInit,\n      onOpen,\n      onClose,\n      onMessage,\n      ...webchatOptions\n    } = optionsAtRuntime\n    theme = { ...this.theme, ...theme }\n    persistentMenu = persistentMenu || this.persistentMenu\n    blockInputs = blockInputs || this.blockInputs\n    emojiPicker = emojiPicker || this.emojiPicker\n    this.onInit = onInit || this.onInit\n    this.onOpen = onOpen || this.onOpen\n    this.onClose = onClose || this.onClose\n    this.onMessage = onMessage || this.onMessage\n    render(\n      <WebchatDev\n        ref={this.webchatRef}\n        {...webchatOptions}\n        theme={theme}\n        persistentMenu={persistentMenu}\n        blockInputs={blockInputs}\n        emojiPicker={emojiPicker}\n        getString={(stringId, session) => this.bot.getString(stringId, session)}\n        setLocale={(locale, session) => this.bot.setLocale(locale, session)}\n        onInit={(...args) => this.onInitWebchat(...args)}\n        onOpen={(...args) => this.onOpenWebchat(...args)}\n        onClose={(...args) => this.onCloseWebchat(...args)}\n        onUserInput={(...args) => this.onUserInput(...args)}\n      />,\n      dest\n    )\n  }\n\n  async onUserInput({ input, session, lastRoutePath }) {\n    this.onMessage && this.onMessage(this, { from: 'user', message: input })\n    let resp = await this.bot.input({ input, session, lastRoutePath })\n    this.onMessage &&\n      resp.response.map(r => this.onMessage(this, { from: 'bot', message: r }))\n    this.webchatRef.current.addBotResponse(resp)\n  }\n}\n"],"file":"dev-app.js"}