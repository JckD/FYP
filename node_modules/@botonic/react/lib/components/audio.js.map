{"version":3,"sources":["../../src/components/audio.jsx"],"names":["serialize","audioProps","audio","src","Audio","props","content","children","maxWidth"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,UAAU,EAAI;AAC9B,SAAO;AAAEC,IAAAA,KAAK,EAAED,UAAU,CAACE;AAApB,GAAP;AACD,CAFD;;AAIO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAC5B,MAAIC,OAAO,GAAGD,KAAK,CAACE,QAApB;AACA,MAAI,sBAAJ,EACED,OAAO,GACL;AAAO,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAAoC,IAAA,EAAE,EAAC,SAAvC;AAAiD,IAAA,QAAQ;AAAzD,KACE;AAAQ,IAAA,GAAG,EAAEH,KAAK,CAACF,GAAnB;AAAwB,IAAA,IAAI,EAAC;AAA7B,IADF,qDADF;AAMF,SACE,gCAAC,gBAAD;AACE,IAAA,IAAI,EAAEH,SAAS,CAACK,KAAD;AADjB,KAEMA,KAFN;AAGE,IAAA,IAAI,EAAC;AAHP,MAKGC,OALH,CADF;AASD,CAlBM;;;AAoBPF,KAAK,CAACJ,SAAN,GAAkBA,SAAlB","sourcesContent":["import React from 'react'\nimport { isBrowser } from '@botonic/core'\nimport { Message } from './message'\n\nconst serialize = audioProps => {\n  return { audio: audioProps.src }\n}\n\nexport const Audio = props => {\n  let content = props.children\n  if (isBrowser())\n    content = (\n      <audio style={{ maxWidth: '100%' }} id='myAudio' controls>\n        <source src={props.src} type='audio/mpeg' />\n        Your browser does not support this audio format.\n      </audio>\n    )\n  return (\n    <Message\n      json={serialize(props)}\n      {...props}\n      type='audio'\n    >\n      {content}\n    </Message>\n  )\n}\n\nAudio.serialize = serialize\n"],"file":"audio.js"}