{"version":3,"sources":["../../src/components/text.jsx"],"names":["serialize","textProps","text","children","join","Text","props"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,SAAS,EAAI;AAC7B,MAAIC,IAAI,GAAGD,SAAS,CAACE,QAArB;AACA;;;;;;AAKA,MAAI,yBAAOF,SAAS,CAACE,QAAjB,KAA6B,QAAjC,EAA2C;AACzCD,IAAAA,IAAI,GAAGD,SAAS,CAACE,QAAV,CAAmBC,IAAnB,CAAwB,GAAxB,CAAP;AACA,QAAI,OAAOH,SAAS,CAACE,QAAV,CAAmB,CAAnB,CAAP,IAAgC,QAApC,EAA8CD,IAAI,GAAGD,SAAS,CAACE,QAAV,CAAmB,CAAnB,CAAP;AAC/C;;AACD,SAAO;AAAED,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD,CAZD;;AAcO,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACvB,gCAAC,gBAAD;AACE,IAAA,IAAI,EAAEN,SAAS,CAACM,KAAD;AADjB,KAEMA,KAFN;AAGE,IAAA,IAAI,EAAC;AAHP,MAKGA,KAAK,CAACH,QALT,CADuB;AAAA,CAAlB;;;AAUPE,IAAI,CAACL,SAAL,GAAiBA,SAAjB","sourcesContent":["import React from 'react'\nimport { Message } from './message'\n\nconst serialize = textProps => {\n  let text = textProps.children\n  /* As text message can have multiple children ( a text with buttons or quickreplies )\n    we only want to store the text, we don't want to store the buttons or quickreplies.\n    If we have an array of string, we want to join all the string as a single string, for \n    future render actions\n  */\n  if (typeof textProps.children == 'object') {\n    text = textProps.children.join(' ')\n    if (typeof textProps.children[1] != 'string') text = textProps.children[0]\n  }\n  return { text }\n}\n\nexport const Text = props => (\n  <Message\n    json={serialize(props)}\n    {...props}\n    type='text'\n  >\n    {props.children}\n  </Message>\n)\n\nText.serialize = serialize\n"],"file":"text.js"}