"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebchatMessageList = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _contexts = require("../contexts");

var _utils = require("../utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var WebchatMessageList = function WebchatMessageList(props) {
  var _useContext = (0, _react.useContext)(_contexts.WebchatContext),
      webchatState = _useContext.webchatState;

  var CustomIntro = webchatState.theme && webchatState.theme.customIntro;

  var DefaultIntro = webchatState.theme && webchatState.theme.introImage && _react["default"].createElement("img", {
    style: _objectSpread({
      maxHeight: '50%'
    }, webchatState.theme.introStyle || {}),
    src: (0, _utils.staticAsset)(webchatState.theme.introImage)
  });

  return _react["default"].createElement("div", {
    style: _objectSpread({}, props.style || {}, {
      display: 'flex',
      flexDirection: 'column',
      overflowY: 'auto'
    })
  }, CustomIntro ? _react["default"].createElement(CustomIntro, null) : DefaultIntro, webchatState.messagesComponents.map(function (e, i) {
    return _react["default"].createElement("div", {
      style: {
        display: 'flex',
        overflowX: 'hidden',
        flexDirection: 'column',
        flex: 'none',
        whiteSpace: 'pre',
        wordWrap: 'break-word'
      },
      key: i
    }, e);
  }), props.children);
};

exports.WebchatMessageList = WebchatMessageList;
//# sourceMappingURL=messageList.js.map