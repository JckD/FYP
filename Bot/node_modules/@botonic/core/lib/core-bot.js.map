{"version":3,"sources":["../src/core-bot.js"],"names":["CoreBot","renderer","routes","locales","integrations","theme","plugins","appId","defaultTyping","defaultDelay","defaultRoutes","rootElement","router","Router","stringID","session","__locale","locale","input","lastRoutePath","type","nlu","Object","assign","output","processInput","request","getString","stringId","setLocale","params","actions","action","retryAction","defaultAction","response","is_first_interaction"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;IAEaA,O;;;AACX,yBAWG;AAAA,QAVDC,QAUC,QAVDA,QAUC;AAAA,QATDC,MASC,QATDA,MASC;AAAA,QARDC,OAQC,QARDA,OAQC;AAAA,QAPDC,YAOC,QAPDA,YAOC;AAAA,QANDC,KAMC,QANDA,KAMC;AAAA,QALDC,OAKC,QALDA,OAKC;AAAA,QAJDC,KAIC,QAJDA,KAIC;AAAA,QAHDC,aAGC,QAHDA,aAGC;AAAA,QAFDC,YAEC,QAFDA,YAEC;AAAA,QADDC,aACC,QADDA,aACC;AAAA;AACD,SAAKT,QAAL,GAAgBA,QAAhB;AACA,SAAKK,OAAL,GAAe,0BAAYA,OAAZ,CAAf;AACA,SAAKD,KAAL,GAAaA,KAAK,IAAI,EAAtB;AACA,SAAKG,aAAL,GAAqBA,aAAa,IAAI,GAAtC;AACA,SAAKC,YAAL,GAAoBA,YAAY,IAAI,GAApC;AACA,SAAKN,OAAL,GAAeA,OAAf;AACA,SAAKC,YAAL,GAAoBA,YAApB;;AACA,QAAIG,KAAJ,EAAW;AACT,WAAKA,KAAL,GAAaA,KAAb;AACA;AACD;;AACD,SAAKI,WAAL,GAAmB,IAAnB;AACA,SAAKT,MAAL,GAAcA,MAAd;AACA,SAAKQ,aAAL,GAAqBA,aAAa,IAAI,EAAtC;AACA,SAAKE,MAAL,GAAc,uBAAW,KAAKV,MAAhB,IACV,IADU,GAEV,IAAIW,cAAJ,+CAAe,KAAKX,MAApB,uCAA+B,KAAKQ,aAApC,GAFJ;AAGD;;;;8BAESI,Q,EAAUC,O,EAAS;AAC3B,aAAO,qBAAU,KAAKZ,OAAf,EAAwBY,OAAO,CAACC,QAAhC,EAA0CF,QAA1C,CAAP;AACD;;;8BAESG,M,EAAQF,O,EAAS;AACzBA,MAAAA,OAAO,CAACC,QAAR,GAAmBC,MAAnB;AACD;;;;;;;;;;;;;;;AAEaC,gBAAAA,M,SAAAA,K,EAAOH,O,SAAAA,O,EAASI,a,SAAAA,a;AAC5BJ,gBAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,oBAAI,CAACA,OAAO,CAACC,QAAb,EAAuBD,OAAO,CAACC,QAAR,GAAmB,IAAnB;;qBAEnB,KAAKV,O;;;;;;uBACD,yBAAW,KAAKA,OAAhB,EAAyB,KAAzB,EAAgCY,MAAhC,EAAuCH,OAAvC,EAAgDI,aAAhD,C;;;;;;;sBACG,KAAKf,YAAL,IAAqBc,MAAK,CAACE,IAAN,IAAc,M;;;;;;;uBAE1B,iBAAOF,MAAP,EAAc,KAAKd,YAAnB,C;;;AAAZiB,gBAAAA,G;AACJC,gBAAAA,MAAM,CAACC,MAAP,CAAcL,MAAd,EAAqBG,GAArB;;;;;;;;;qBAIA,uBAAW,KAAKnB,MAAhB,C;;;;;8BACgBW,c;;;;uBACN,KAAKX,MAAL,CAAY;AAAEgB,kBAAAA,KAAK,EAALA,MAAF;AAASH,kBAAAA,OAAO,EAAPA;AAAT,iBAAZ,C;;;;;kEACP,KAAKL,a;;AAFV,qBAAKE,M;;;AAMHY,gBAAAA,M,GAAS,KAAKZ,MAAL,CAAYa,YAAZ,CAAyBP,MAAzB,EAAgCH,OAAhC,EAAyCI,aAAzC,C;AAETO,gBAAAA,O,GAAU;AACZC,kBAAAA,SAAS,EAAE,mBAAAC,QAAQ;AAAA,2BAAI,KAAI,CAACD,SAAL,CAAeC,QAAf,EAAyBb,OAAzB,CAAJ;AAAA,mBADP;AAEZc,kBAAAA,SAAS,EAAE,mBAAAZ,MAAM;AAAA,2BAAI,KAAI,CAACY,SAAL,CAAeZ,MAAf,EAAuBF,OAAvB,CAAJ;AAAA,mBAFL;AAGZA,kBAAAA,OAAO,EAAEA,OAAO,IAAI,EAHR;AAIZe,kBAAAA,MAAM,EAAEN,MAAM,CAACM,MAAP,IAAiB,EAJb;AAKZZ,kBAAAA,KAAK,EAAEA,MALK;AAMZZ,kBAAAA,OAAO,EAAE,KAAKA,OANF;AAOZE,kBAAAA,aAAa,EAAE,KAAKA,aAPR;AAQZC,kBAAAA,YAAY,EAAE,KAAKA,YARP;AASZU,kBAAAA,aAAa,EAAbA;AATY,iB;AAYVY,gBAAAA,O,GAAU,CAACP,MAAM,CAACQ,MAAR,EAAgBR,MAAM,CAACS,WAAvB,EAAoCT,MAAM,CAACU,aAA3C,C;;uBAEO,KAAKjC,QAAL,CAAc;AAAEyB,kBAAAA,OAAO,EAAPA,OAAF;AAAWK,kBAAAA,OAAO,EAAPA;AAAX,iBAAd,C;;;AAAjBI,gBAAAA,Q;AAEJhB,gBAAAA,aAAa,GAAGK,MAAM,CAACL,aAAvB;;qBAEI,KAAKb,O;;;;;;uBACD,yBACJ,KAAKA,OADD,EAEJ,MAFI,EAGJY,MAHI,EAIJH,OAJI,EAKJI,aALI,EAMJgB,QANI,C;;;AASRpB,gBAAAA,OAAO,CAACqB,oBAAR,GAA+B,KAA/B;iDACO;AAAElB,kBAAAA,KAAK,EAALA,MAAF;AAASiB,kBAAAA,QAAQ,EAARA,QAAT;AAAmBpB,kBAAAA,OAAO,EAAPA,OAAnB;AAA4BI,kBAAAA,aAAa,EAAbA;AAA5B,iB","sourcesContent":["import { Router } from './router'\nimport { getNLU } from './nlu'\nimport { getString } from './i18n'\nimport { loadPlugins, runPlugins } from './plugins'\nimport { isFunction } from './utils'\n\nexport class CoreBot {\n  constructor({\n    renderer,\n    routes,\n    locales,\n    integrations,\n    theme,\n    plugins,\n    appId,\n    defaultTyping,\n    defaultDelay,\n    defaultRoutes\n  }) {\n    this.renderer = renderer\n    this.plugins = loadPlugins(plugins)\n    this.theme = theme || {}\n    this.defaultTyping = defaultTyping || 0.6\n    this.defaultDelay = defaultDelay || 0.4\n    this.locales = locales\n    this.integrations = integrations\n    if (appId) {\n      this.appId = appId\n      return\n    }\n    this.rootElement = null\n    this.routes = routes\n    this.defaultRoutes = defaultRoutes || []\n    this.router = isFunction(this.routes)\n      ? null\n      : new Router([...this.routes, ...this.defaultRoutes])\n  }\n\n  getString(stringID, session) {\n    return getString(this.locales, session.__locale, stringID)\n  }\n\n  setLocale(locale, session) {\n    session.__locale = locale\n  }\n\n  async input({ input, session, lastRoutePath }) {\n    session = session || {}\n    if (!session.__locale) session.__locale = 'en'\n\n    if (this.plugins) {\n      await runPlugins(this.plugins, 'pre', input, session, lastRoutePath)\n    } else if (this.integrations && input.type == 'text') {\n      try {\n        let nlu = await getNLU(input, this.integrations)\n        Object.assign(input, nlu)\n      } catch (e) {}\n    }\n\n    if (isFunction(this.routes)) {\n      this.router = new Router([\n        ...(await this.routes({ input, session })),\n        ...this.defaultRoutes\n      ])\n    }\n\n    let output = this.router.processInput(input, session, lastRoutePath)\n\n    let request = {\n      getString: stringId => this.getString(stringId, session),\n      setLocale: locale => this.setLocale(locale, session),\n      session: session || {},\n      params: output.params || {},\n      input: input,\n      plugins: this.plugins,\n      defaultTyping: this.defaultTyping,\n      defaultDelay: this.defaultDelay,\n      lastRoutePath\n    }\n\n    let actions = [output.action, output.retryAction, output.defaultAction]\n\n    let response = await this.renderer({ request, actions })\n\n    lastRoutePath = output.lastRoutePath\n\n    if (this.plugins) {\n      await runPlugins(\n        this.plugins,\n        'post',\n        input,\n        session,\n        lastRoutePath,\n        response\n      )\n    }\n    session.is_first_interaction = false\n    return { input, response, session, lastRoutePath }\n  }\n}\n"],"file":"core-bot.js"}