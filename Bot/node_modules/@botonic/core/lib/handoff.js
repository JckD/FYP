"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOpenQueues = getOpenQueues;
exports.humanHandOff = humanHandOff;
exports.storeCaseRating = storeCaseRating;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _axios = _interopRequireDefault(require("axios"));

function getOpenQueues(_x) {
  return _getOpenQueues.apply(this, arguments);
}

function _getOpenQueues() {
  _getOpenQueues = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(session) {
    var base_url, queues_url, bot_id, resp;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            base_url = session._hubtype_api || 'https://api.hubtype.com';
            queues_url = "".concat(base_url, "/v1/queues/get_open_queues/");
            bot_id = session.bot.id;
            _context.next = 5;
            return (0, _axios["default"])({
              headers: {
                Authorization: "Bearer ".concat(session._access_token)
              },
              method: 'post',
              url: queues_url,
              data: {
                bot_id: bot_id
              }
            });

          case 5:
            resp = _context.sent;
            return _context.abrupt("return", resp.data);

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _getOpenQueues.apply(this, arguments);
}

function humanHandOff(_x2, _x3, _x4) {
  return _humanHandOff.apply(this, arguments);
}

function _humanHandOff() {
  _humanHandOff = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee2(session, queue_name, on_finish) {
    var params;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            params = "create_case:".concat(queue_name);

            if (on_finish) {
              if (on_finish.path) params += ":__PATH_PAYLOAD__".concat(on_finish.path);else if (on_finish.payload) params += ":".concat(on_finish.payload);
            }

            session._botonic_action = params;

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _humanHandOff.apply(this, arguments);
}

function storeCaseRating(_x5, _x6) {
  return _storeCaseRating.apply(this, arguments);
}

function _storeCaseRating() {
  _storeCaseRating = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee3(session, rating) {
    var base_url, chat_id, resp;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            base_url = session._hubtype_api || 'https://api.hubtype.com';
            chat_id = session.user.id;
            _context3.next = 4;
            return (0, _axios["default"])({
              headers: {
                Authorization: "Bearer ".concat(session._access_token)
              },
              method: 'post',
              url: "".concat(base_url, "/v1/chats/").concat(chat_id, "/store_case_rating/"),
              data: {
                chat_id: chat_id,
                rating: rating
              }
            });

          case 4:
            resp = _context3.sent;
            return _context3.abrupt("return", resp.data);

          case 6:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _storeCaseRating.apply(this, arguments);
}
//# sourceMappingURL=handoff.js.map