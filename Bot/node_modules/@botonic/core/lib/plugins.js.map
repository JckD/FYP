{"version":3,"sources":["../src/plugins.js"],"names":["loadPlugins","plugins","_plugins","pluginsLength","length","i","pluginRequired","resolve","options","Plugin","instance","id","constructor","name","runPlugins","mode","input","session","lastRoutePath","response","key","p","pre","post","console","log"],"mappings":";;;;;;;;;;;;;;AAAO,SAASA,WAAT,CAAqBC,OAArB,EAA8B;AACnC,MAAI,CAACA,OAAL,EAAc;AACd,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,aAAa,GAAGF,OAAO,CAACG,MAA5B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAApB,EAAmCE,CAAC,EAApC,EAAwC;AACtC,QAAIC,cAAc,GAAGL,OAAO,CAACI,CAAD,CAAP,CAAWE,OAAhC;AACA,QAAIC,OAAO,GAAGP,OAAO,CAACI,CAAD,CAAP,CAAWG,OAAzB;AACA,QAAIC,MAAM,GAAGH,cAAc,WAA3B;AACA,QAAII,QAAQ,GAAG,IAAID,MAAJ,CAAWD,OAAX,CAAf;AACA,QAAIG,EAAE,GAAGV,OAAO,CAACI,CAAD,CAAP,CAAWM,EAAX,cAAoBD,QAAQ,CAACE,WAAT,CAAqBC,IAAzC,CAAT;AACAX,IAAAA,QAAQ,CAACS,EAAD,CAAR,GAAeD,QAAf;AACD;;AACD,SAAOR,QAAP;AACD;;SAEqBY,U;;;;;;;+BAAf,iBACLb,OADK,EAELc,IAFK,EAGLC,KAHK,EAILC,OAJK,EAKLC,aALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMLC,YAAAA,QANK,2DAMM,IANN;AAAA,uDAQWlB,OARX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQImB,YAAAA,GARJ;AAAA;AAAA,mBASWnB,OAAO,CAACmB,GAAD,CATlB;;AAAA;AASCC,YAAAA,CATD;AAAA;;AAAA,kBAWGN,IAAI,IAAI,KAXX;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWwBM,CAAC,CAACC,GAAF,CAAM;AAAEN,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,OAAO,EAAPA,OAAT;AAAkBC,cAAAA,aAAa,EAAbA;AAAlB,aAAN,CAXxB;;AAAA;AAAA,kBAYGH,IAAI,IAAI,MAZX;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAaOM,CAAC,CAACE,IAAF,CAAO;AAAEP,cAAAA,KAAK,EAALA,KAAF;AAASC,cAAAA,OAAO,EAAPA,OAAT;AAAkBC,cAAAA,aAAa,EAAbA,aAAlB;AAAiCC,cAAAA,QAAQ,EAARA;AAAjC,aAAP,CAbP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeDK,YAAAA,OAAO,CAACC,GAAR;;AAfC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export function loadPlugins(plugins) {\n  if (!plugins) return\n  let _plugins = {}\n  let pluginsLength = plugins.length\n  for (let i = 0; i < pluginsLength; i++) {\n    let pluginRequired = plugins[i].resolve\n    let options = plugins[i].options\n    let Plugin = pluginRequired.default\n    let instance = new Plugin(options)\n    let id = plugins[i].id || `${instance.constructor.name}`\n    _plugins[id] = instance\n  }\n  return _plugins\n}\n\nexport async function runPlugins(\n  plugins,\n  mode,\n  input,\n  session,\n  lastRoutePath,\n  response = null\n) {\n  for (let key in plugins) {\n    let p = await plugins[key]\n    try {\n      if (mode == 'pre') await p.pre({ input, session, lastRoutePath })\n      if (mode == 'post')\n        await p.post({ input, session, lastRoutePath, response })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n"],"file":"plugins.js"}