{"version":3,"sources":["../src/webchat-app.jsx"],"names":["WebchatApp","theme","persistentMenu","blockInputs","emojiPicker","onInit","onOpen","onClose","onMessage","appId","webchatRef","React","createRef","args","user","input","from","message","hubtypeService","postMessage","messagesJSON","lastMessage","length","HubtypeService","lastMessageId","id","onEvent","event","onServiceEvent","isError","current","setError","errorMessage","type","setTyping","data","addBotMessage","updateUser","addBotResponse","response","customMessageTypes","text","addUserMessage","payload","typing","openWebchat","closeWebchat","toggleWebchat","dest","optionsAtRuntime","webchatOptions","onInitWebchat","onOpenWebchat","onCloseWebchat","onUserInput","webchatState","onStateChange"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { render } from 'react-dom'\n\nimport { Webchat } from './webchat'\nimport { HubtypeService } from '@botonic/core'\nimport { msgToBotonic } from './utils'\n\nexport class WebchatApp {\n  constructor({\n    theme = {},\n    persistentMenu,\n    blockInputs,\n    emojiPicker,\n    onInit,\n    onOpen,\n    onClose,\n    onMessage,\n    appId\n  }) {\n    this.theme = theme\n    this.persistentMenu = persistentMenu\n    this.blockInputs = blockInputs\n    this.emojiPicker = emojiPicker\n    this.onInit = onInit\n    this.onOpen = onOpen\n    this.onClose = onClose\n    this.onMessage = onMessage\n    this.webchatRef = React.createRef()\n    this.appId = appId\n  }\n\n  onInitWebchat(...args) {\n    this.onInit && this.onInit(this, ...args)\n  }\n\n  onOpenWebchat(...args) {\n    this.onOpen && this.onOpen(this, ...args)\n  }\n\n  onCloseWebchat(...args) {\n    this.onClose && this.onClose(this, ...args)\n  }\n\n  async onUserInput({ user, input }) {\n    this.onMessage && this.onMessage(this, { from: 'user', message: input })\n    this.hubtypeService.postMessage(user, input)\n  }\n\n  onStateChange({ user, messagesJSON }) {\n    if (!this.hubtypeService && user) {\n      let lastMessage = messagesJSON[messagesJSON.length - 1]\n      this.hubtypeService = new HubtypeService({\n        appId: this.appId,\n        user,\n        lastMessageId: lastMessage && lastMessage.id,\n        onEvent: event => this.onServiceEvent(event)\n      })\n    }\n  }\n\n  onServiceEvent(event) {\n    if (event.isError)\n      this.webchatRef.current.setError({ message: event.errorMessage })\n    else if (event.message.type === 'sender_action')\n      this.setTyping(event.message.data === 'typing_on')\n    else this.addBotMessage(event.message)\n  }\n\n  updateUser(user) {\n    this.webchatRef.current.updateUser(user)\n  }\n\n  addBotMessage(message) {\n    this.webchatRef.current.addBotResponse({\n      response: msgToBotonic(message, this.theme.customMessageTypes)\n    })\n  }\n\n  addBotText(text) {\n    this.addBotMessage({ type: 'text', data: text })\n  }\n\n  addUserMessage(message) {\n    this.webchatRef.current.addUserMessage(message)\n  }\n\n  addUserText(text) {\n    this.webchatRef.current.addUserMessage({ type: 'text', data: text })\n  }\n\n  addUserPayload(payload) {\n    this.webchatRef.current.addUserMessage({ type: 'postback', payload })\n  }\n\n  setTyping(typing) {\n    this.webchatRef.current.setTyping(typing)\n  }\n\n  open() {\n    this.webchatRef.current.openWebchat()\n  }\n\n  close() {\n    this.webchatRef.current.closeWebchat()\n  }\n\n  toggle() {\n    this.webchatRef.current.toggleWebchat()\n  }\n\n  render(dest, optionsAtRuntime = {}) {\n    let {\n      theme = {},\n      persistentMenu,\n      blockInputs,\n      emojiPicker,\n      onInit,\n      onOpen,\n      onClose,\n      onMessage,\n      appId,\n      ...webchatOptions\n    } = optionsAtRuntime\n    theme = { ...this.theme, ...theme }\n    persistentMenu = persistentMenu || this.persistentMenu\n    blockInputs = blockInputs || this.blockInputs\n    emojiPicker = emojiPicker || this.emojiPicker\n    this.onInit = onInit || this.onInit\n    this.onOpen = onOpen || this.onOpen\n    this.onClose = onClose || this.onClose\n    this.onMessage = onMessage || this.onMessage\n    this.appId = appId || this.appId\n    render(\n      <Webchat\n        ref={this.webchatRef}\n        {...webchatOptions}\n        theme={theme}\n        persistentMenu={persistentMenu}\n        blockInputs={blockInputs}\n        emojiPicker={emojiPicker}\n        onInit={(...args) => this.onInitWebchat(...args)}\n        onOpen={(...args) => this.onOpenWebchat(...args)}\n        onClose={(...args) => this.onCloseWebchat(...args)}\n        onUserInput={(...args) => this.onUserInput(...args)}\n        onStateChange={webchatState => this.onStateChange(webchatState)}\n      />,\n      dest\n    )\n  }\n}\n"],"file":"webchat-app.js"}