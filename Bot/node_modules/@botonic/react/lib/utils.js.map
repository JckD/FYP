{"version":3,"sources":["../src/utils.js"],"names":["isDev","process","env","NODE_ENV","isProd","msgToBotonic","msg","customMessageTypes","display","type","find","mt","customTypeName","data","deserialize","e","console","log","replies","length","keyboard","text","quickreplies_parse","buttons","buttons_parse","elements","elements_parse","image","video","audio","document","lat","location","latitude","long","longitude","msgsToBotonic","msgs","Array","isArray","map","i","img","pic","image_url","title","subtitle","button","b","props","payload","path","url","messenger_extensions","webview","el","label","staticAsset","scriptBaseURL","querySelector","getAttribute","scriptName","split","pop","basePath","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text } from './components/text'\nimport { Title } from './components/title'\nimport { Subtitle } from './components/subtitle'\nimport { Element } from './components/element'\nimport { Button } from './components/button'\nimport { Carousel } from './components/carousel'\nimport { Reply } from './components/reply'\nimport { Image } from './components/image'\nimport { Audio } from './components/audio'\nimport { Pic } from './components/pic'\nimport { Video } from './components/video'\nimport { Document } from './components/document'\nimport { Location } from './components/location'\n\nexport function isDev() {\n  return process.env.NODE_ENV == 'development'\n}\n\nexport function isProd() {\n  return process.env.NODE_ENV == 'production'\n}\n\nexport function msgToBotonic(msg, customMessageTypes) {\n  delete msg.display\n  if (msg.type == 'custom') {\n    try {\n      return customMessageTypes\n        .find(mt => mt.customTypeName == msg.data.customTypeName)\n        .deserialize(msg)\n    } catch (e) {\n      console.log(e)\n    }\n  } else if (msg.type == 'text') {\n    if (\n      (msg.replies && msg.replies.length) ||\n      (msg.keyboard && msg.keyboard.length)\n    )\n      return (\n        <Text {...msg}>\n          {msg.data.text || msg.data}\n          {quickreplies_parse(msg)}\n        </Text>\n      )\n    if (msg.buttons && msg.buttons.length)\n      return (\n        <Text {...msg}>\n          {msg.data.text || msg.data}\n          {buttons_parse(msg.buttons)}\n        </Text>\n      )\n    return <Text {...msg}>{msg.data.text || msg.data}</Text>\n  } else if (msg.type == 'carousel') {\n    let elements = msg.elements || msg.data.elements\n    return <Carousel {...msg}>{elements_parse(elements)}</Carousel>\n  } else if (msg.type == 'image') {\n    return <Image {...msg} src={msg.data.image || msg.data} />\n  } else if (msg.type == 'video') {\n    return <Video {...msg} src={msg.data.video || msg.data} />\n  } else if (msg.type == 'audio') {\n    return <Audio {...msg} src={msg.data.audio || msg.data} />\n  } else if (msg.type == 'document') {\n    return <Document {...msg} src={msg.data.document || msg.data} />\n  } else if (msg.type == 'location') {\n    let lat = msg.data ? msg.data.location.lat : msg.latitude\n    let long = msg.data ? msg.data.location.long : msg.longitude\n    return <Location {...msg} lat={lat} long={long} />\n  } else if (msg.type == 'buttonmessage') {\n    let buttons = buttons_parse(msg.buttons)\n    return (\n      <>\n        <Text {...msg}>\n          {msg.text}\n          {buttons}\n        </Text>\n      </>\n    )\n  }\n}\n\nexport function msgsToBotonic(msgs, customMessageTypes) {\n  if (Array.isArray(msgs)) {\n    return (\n      <>\n        {msgs.map((msg, i) => {\n          if (msg['key'] == null) {\n            msg['key'] = `msg${i}`\n          }\n          return msgToBotonic(msg, customMessageTypes)\n        })}\n      </>\n    )\n  }\n  return msgToBotonic(msgs, customMessageTypes)\n}\n\nfunction elements_parse(elements) {\n  return elements.map((e, i) => (\n    <Element key={i}>\n      <Pic src={e.img || e.pic || e.image_url} />\n      <Title>{e.title}</Title>\n      <Subtitle>{e.subtitle}</Subtitle>\n      {buttons_parse(e.button || e.buttons)}\n    </Element>\n  ))\n}\n\nfunction buttons_parse(buttons) {\n  return buttons.map((b, i) => {\n    let props = b.props || b\n    let payload = props.payload\n    if (props.path) payload = `__PATH_PAYLOAD__${props.path}`\n    let url = props.messenger_extensions ? null : props.url\n    let title = props.title\n    let webview = props.messenger_extensions ? props.url : null\n    return (\n      <Button key={i} payload={payload} url={url} webview={webview}>\n        {title}\n      </Button>\n    )\n  })\n}\n\nfunction quickreplies_parse(msg) {\n  let replies = null\n  if (msg.replies) {\n    replies = msg.replies.map((el, i) => {\n      let payload = el.payload\n      if (el.path) payload = `__PATH_PAYLOAD__${el.path}`\n      return (\n        <Reply key={i} payload={payload}>\n          {el.text}\n        </Reply>\n      )\n    })\n  }\n  if (msg.keyboard) {\n    replies = msg.keyboard.map(el => (\n      <Reply payload={el.data}>{el.label}</Reply>\n    ))\n  }\n  return replies\n}\n\nexport const staticAsset = path => {\n  let scriptBaseURL = document\n    .querySelector('script[src$=\"webchat.botonic.js\"]')\n    .getAttribute('src')\n  let scriptName = scriptBaseURL.split('/').pop()\n  let basePath = scriptBaseURL.replace('/' + scriptName, '/')\n  return basePath + path\n}\n"],"file":"utils.js"}