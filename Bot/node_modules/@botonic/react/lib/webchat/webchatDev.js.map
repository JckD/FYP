{"version":3,"sources":["../../src/webchat/webchatDev.jsx"],"names":["WebchatDev","props","ref","webchatHooks","webchatState","updateTheme","theme","flex","position","is_first_interaction","last_session","user","id","username","name","provider","provider_id","extra_data","organization","bot","keepSessionOnReload","devSettings","showSessionView","left","top","width","height"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEO,IAAMA,UAAU,GAAG,uBAAW,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACnD,MAAMC,YAAY,GAAG,wBAArB;AADmD,MAE3CC,YAF2C,GAEbD,YAFa,CAE3CC,YAF2C;AAAA,MAE7BC,WAF6B,GAEbF,YAFa,CAE7BE,WAF6B;AAInD;;;;AAGA,wBACE;AAAA,WACEA,WAAW,mBACND,YAAY,CAACE,KADP,MAENL,KAAK,CAACK,KAFA,EADb;AAAA,GADF,EAME,CAACL,KAAK,CAACK,KAAP,CANF;AASA,SACE,6CACE,gCAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,QAAQ,EAAE;AAArB;AADT,KAEMP,KAFN;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,cAAc,EAAE;AACdM,MAAAA,oBAAoB,EAAE,IADR;AAEdC,MAAAA,YAAY,EAAE,EAFA;AAGdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,QADA;AAEJC,QAAAA,QAAQ,EAAE,SAFN;AAGJC,QAAAA,IAAI,EAAE,UAHF;AAIJC,QAAAA,QAAQ,EAAE,KAJN;AAKJC,QAAAA,WAAW,EAAE,SALT;AAMJC,QAAAA,UAAU,EAAE;AANR,OAHQ;AAWdC,MAAAA,YAAY,EAAE,EAXA;AAYdC,MAAAA,GAAG,EAAE;AACHP,QAAAA,EAAE,EAAE,SADD;AAEHE,QAAAA,IAAI,EAAE;AAFH;AAZS,KALlB;AAsBE,IAAA,kBAAkB,EAAE;AAClBM,MAAAA,mBAAmB,EAAEhB,YAAY,CAACiB,WAAb,CAAyBD,mBAD5B;AAElBE,MAAAA,eAAe,EAAElB,YAAY,CAACiB,WAAb,CAAyBC;AAFxB;AAtBtB,KADF,EA4BE;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,QAAQ,EAAE,OADL;AAELe,MAAAA,IAAI,EAAE,CAFD;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,KAAK,EAAE,GAJF;AAKLC,MAAAA,MAAM,EAAE;AALH;AADT,KASE,gCAAC,wBAAD;AAAa,IAAA,YAAY,EAAEvB;AAA3B,IATF,CA5BF,CADF;AA0CD,CA1DyB,CAAnB","sourcesContent":["import React, { forwardRef, useEffect } from 'react'\nimport { useWebchat } from './hooks'\nimport { Webchat } from './webchat'\nimport { SessionView } from './sessionView'\n\nexport const WebchatDev = forwardRef((props, ref) => {\n  const webchatHooks = useWebchat()\n  const { webchatState, updateTheme } = webchatHooks\n\n  /* TODO: webchatState.theme shoud be included in the dependencies array\n  together with props.theme. The problem is that this effect modifies webchatState\n  so we enter an infinite rerender loop. */\n  useEffect(\n    () =>\n      updateTheme({\n        ...webchatState.theme,\n        ...props.theme\n      }),\n    [props.theme]\n  )\n\n  return (\n    <div>\n      <Webchat\n        style={{ flex: 1, position: 'relative' }}\n        {...props}\n        ref={ref}\n        webchatHooks={webchatHooks}\n        initialSession={{\n          is_first_interaction: true,\n          last_session: {},\n          user: {\n            id: '000001',\n            username: 'johndoe',\n            name: 'John Doe',\n            provider: 'dev',\n            provider_id: '0000000',\n            extra_data: {}\n          },\n          organization: '',\n          bot: {\n            id: '0000000',\n            name: 'botName'\n          }\n        }}\n        initialDevSettings={{\n          keepSessionOnReload: webchatState.devSettings.keepSessionOnReload,\n          showSessionView: webchatState.devSettings.showSessionView\n        }}\n      />\n      <div\n        style={{\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          width: 350,\n          height: '100%'\n        }}\n      >\n        <SessionView webchatHooks={webchatHooks} />\n      </div>\n    </div>\n  )\n})\n"],"file":"webchatDev.js"}