{"version":3,"sources":["../../src/webchat/webview.jsx"],"names":["WebviewHeader","props","RequestContext","closeWebview","textAlign","backgroundColor","borderTop","borderBottom","display","padding","cursor","WebviewContainer","WebchatContext","webchatState","Webview","webview","close","e","data","window","addEventListener","attachEvent","position","flexDirection","bottom","width","height","style","flex","overflow","borderStyle"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,oBACX,uBAAWC,wBAAX,CADW;AAAA,MAC5BC,YAD4B,eAC5BA,YAD4B;;AAEpC,SACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,OADN;AAELC,MAAAA,eAAe,EAAE,SAFZ;AAGLC,MAAAA,SAAS,EAAE,8BAHN;AAILC,MAAAA,YAAY,EAAE;AAJT;AADT,KAQE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,cADJ;AAELC,MAAAA,OAAO,EAAE,UAFJ;AAGLC,MAAAA,MAAM,EAAE;AAHH,KADT;AAME,IAAA,OAAO,EAAEP;AANX,cARF,CADF;AAqBD,CAvBM;;;;AAyBA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAV,KAAK,EAAI;AAAA,qBACd,uBAAWW,wBAAX,CADc;AAAA,MAC/BC,YAD+B,gBAC/BA,YAD+B;;AAAA,qBAEd,uBAAWX,wBAAX,CAFc;AAAA,MAE/BC,YAF+B,gBAE/BA,YAF+B;;AAGvC,MAAIW,OAAO,GAAGD,YAAY,CAACE,OAA3B;;AAEA,MAAIC,KAAK,GAAG,SAARA,KAAQ,CAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,IAAU,qBAAV,IAAmCf,YAAY,EAAnD;AAAA,GAAb;;AAEA,wBAAU,YAAM;AACd,QAAIgB,MAAM,CAACC,gBAAX,EAA6B;AAC3BD,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,KAAnC,EAA0C,KAA1C;AACD,KAFD,MAEO,IAAIG,MAAM,CAACE,WAAX,EAAwB;AAC7B;AACAF,MAAAA,MAAM,CAACE,WAAP,CAAmB,WAAnB,EAAgCL,KAAhC;AACD;AACF,GAPD,EAOG,EAPH;AASA,SACE;AACE,IAAA,KAAK;AACHM,MAAAA,QAAQ,EAAE,UADP;AAEHd,MAAAA,OAAO,EAAE,MAFN;AAGHe,MAAAA,aAAa,EAAE,QAHZ;AAIHC,MAAAA,MAAM,EAAE,CAJL;AAKHC,MAAAA,KAAK,EAAE,MALJ;AAMHC,MAAAA,MAAM,EAAE,KANL;AAOHrB,MAAAA,eAAe,EAAE;AAPd,OAQCJ,KAAK,CAAC0B,KAAN,IAAe,EARhB;AADP,KAYE,gCAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAAtB,IAZF,EAaE;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,QAAQ,EAAE;AAFL;AADT,KAMG,OAAOf,OAAP,KAAmB,QAAnB,GACC;AACE,IAAA,GAAG,EAAEA,OADP;AAEE,IAAA,KAAK,EAAE;AACLgB,MAAAA,WAAW,EAAE,MADR;AAELL,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH;AAFT,IADD,GAUC,gCAAC,+BAAD;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,WAAW,EAAE,MADR;AAELL,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH;AADT,KAOE,gCAAC,OAAD,OAPF,CAhBJ,CAbF,CADF;AA2CD,CA3DM","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport Frame from 'react-frame-component'\nimport { RequestContext, WebchatContext } from '../contexts'\n\nexport const WebviewHeader = props => {\n  const { closeWebview } = useContext(RequestContext)\n  return (\n    <div\n      style={{\n        textAlign: 'right',\n        backgroundColor: '#f4f4f4',\n        borderTop: '1px solid rgba(0, 0, 0, 0.2)',\n        borderBottom: '1px solid rgba(0, 0, 0, 0.2)'\n      }}\n    >\n      <div\n        style={{\n          display: 'inline-block',\n          padding: '8px 12px',\n          cursor: 'pointer'\n        }}\n        onClick={closeWebview}\n      >\n        âœ•\n      </div>\n    </div>\n  )\n}\n\nexport const WebviewContainer = props => {\n  const { webchatState } = useContext(WebchatContext)\n  const { closeWebview } = useContext(RequestContext)\n  let Webview = webchatState.webview\n\n  let close = e => e.data == 'botonicCloseWebview' && closeWebview()\n\n  useEffect(() => {\n    if (window.addEventListener) {\n      window.addEventListener('message', close, false)\n    } else if (window.attachEvent) {\n      // ie8\n      window.attachEvent('onmessage', close)\n    }\n  }, [])\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        bottom: 0,\n        width: '100%',\n        height: '80%',\n        backgroundColor: '#fff',\n        ...(props.style || {})\n      }}\n    >\n      <WebviewHeader style={{ flex: 'none' }} />\n      <div\n        style={{\n          flex: 1,\n          overflow: 'auto'\n        }}\n      >\n        {typeof Webview === 'string' ? (\n          <iframe\n            src={Webview}\n            style={{\n              borderStyle: 'none',\n              width: '100%',\n              height: '100%'\n            }}\n          />\n        ) : (\n          <Frame\n            style={{\n              borderStyle: 'none',\n              width: '100%',\n              height: '100%'\n            }}\n          >\n            <Webview />\n          </Frame>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"file":"webview.js"}