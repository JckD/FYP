{"version":3,"sources":["../../src/webchat/sessionView.jsx"],"names":["SessionViewAttribute","props","display","flex","padding","paddingBottom","fontSize","fontWeight","color","alignItems","label","maxHeight","marginLeft","overflowX","value","SessionView","webchatHooks","webchatState","updateDevSettings","input","latestInput","session","lastRoutePath","toggleSessionView","devSettings","showSessionView","toggleKeepSessionOnReload","keepSessionOnReload","position","width","height","backgroundColor","fontFamily","flexDirection","zIndex","transition","top","right","cursor","justifyContent","borderTopRightRadius","borderBottomRightRadius","overflowY","textAlign","borderBottom","Object","keys","length","type","data","payload","intent","confidence","toFixed","Boolean","marginRight"],"mappings":"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","sourcesContent":["import React from 'react'\nimport JSONTree from 'react-json-tree'\n\nimport { useWebchat } from './hooks'\n\nconst SessionViewAttribute = props => (\n  <div\n    style={{\n      display: 'flex',\n      flex: 'none',\n      padding: 12,\n      paddingBottom: 0,\n      fontSize: 12,\n      fontWeight: 600,\n      color: 'white',\n      alignItems: 'center'\n    }}\n  >\n    <div\n      style={{\n        flex: 'none'\n      }}\n    >\n      {props.label}\n    </div>\n    <div\n      style={{\n        flex: '1 1 auto',\n        maxHeight: 20,\n        fontSize: 16,\n        fontWeight: 400,\n        marginLeft: 6,\n        color: 'rgb(38, 139, 210)',\n        overflowX: 'hidden'\n      }}\n    >\n      {props.value}\n    </div>\n  </div>\n)\n\nexport const SessionView = props => {\n  const { webchatState, updateDevSettings } = props.webchatHooks || useWebchat()\n  const { latestInput: input, session, lastRoutePath } = webchatState\n  const toggleSessionView = () =>\n    updateDevSettings({\n      ...webchatState.devSettings,\n      showSessionView: !webchatState.devSettings.showSessionView\n    })\n  const toggleKeepSessionOnReload = () =>\n    updateDevSettings({\n      ...webchatState.devSettings,\n      keepSessionOnReload: !webchatState.devSettings.keepSessionOnReload\n    })\n  return (\n    <div\n      style={{\n        position: 'relative',\n        width: webchatState.devSettings.showSessionView ? '100%' : '0%',\n        height: '100%',\n        display: 'flex',\n        backgroundColor: '#002B35',\n        fontFamily: 'Arial, Helvetica, sans-serif',\n        flexDirection: 'column',\n        zIndex: 100000,\n        transition: 'all .2s ease-in-out'\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: 10,\n          right: -32,\n          width: 32,\n          height: 32,\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: 'rgba(255, 255, 255, 0.8)',\n          fontSize: 14,\n          fontWeight: 600,\n          backgroundColor: '#002B35',\n          flexDirection: 'column',\n          zIndex: 100000,\n          borderTopRightRadius: 6,\n          borderBottomRightRadius: 6\n        }}\n        onClick={toggleSessionView}\n      >\n        {webchatState.devSettings.showSessionView ? '⇤' : '⇥'}\n      </div>\n      <div\n        style={{\n          overflowY: 'auto',\n          overflowX: 'hidden',\n          display: 'flex',\n          flex: '1 1 auto',\n          flexDirection: 'column'\n        }}\n      >\n        <div\n          style={{\n            padding: 12,\n            textAlign: 'center',\n            color: 'white',\n            borderBottom: '1px solid rgba(255, 255, 255, 0.3)'\n          }}\n        >\n          Botonic Dev Console\n        </div>\n        <SessionViewAttribute\n          label='INPUT:'\n          value={\n            input && Object.keys(input).length\n              ? `[${input.type}] ${input.data}`\n              : ''\n          }\n        />\n        <SessionViewAttribute label='PAYLOAD:' value={input.payload} />\n        <SessionViewAttribute\n          label='INTENT:'\n          value={\n            input.intent\n              ? `${input.intent} (${(input.confidence * 100).toFixed(1)}%)`\n              : ''\n          }\n        />\n        <SessionViewAttribute\n          label='PATH:'\n          value={lastRoutePath ? `/${lastRoutePath}` : '/'}\n        />\n        <SessionViewAttribute label='SESSION:' />\n        <div style={{ flex: '1 1 auto', height: '100%', overflowY: 'auto' }}>\n          <JSONTree data={session} hideRoot={true} />\n        </div>\n        <div\n          style={{\n            flex: 'none',\n            padding: 12,\n            color: 'rgba(255, 255, 255, 0.8)',\n            fontSize: 12\n          }}\n        >\n          <label>\n            <input\n              type='checkbox'\n              name='toggleKeepSessionOnReload'\n              checked={Boolean(webchatState.devSettings.keepSessionOnReload)}\n              onChange={toggleKeepSessionOnReload}\n              style={{ marginRight: 5 }}\n            />\n            Keep session on reload\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"file":"sessionView.js"}