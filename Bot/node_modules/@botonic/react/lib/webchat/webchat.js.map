{"version":3,"sources":["../../src/webchat/webchat.jsx"],"names":["createUser","parser","UAParser","ua","getResult","name","os","browser","device","type","id","Webchat","props","ref","webchatHooks","webchatState","addMessage","addMessageComponent","updateMessage","updateReplies","updateLatestInput","updateTyping","updateWebview","updateSession","updateUser","updateLastRoutePath","updateHandoff","updateTheme","updateDevSettings","toggleWebchat","setError","openWebviewT","closeWebviewT","initialSession","initialDevSettings","onStateChange","botonicState","saveState","deleteState","menuIsOpened","setMenuIsOpened","emojiIsOpened","setEmojiIsOpened","user","messages","session","lastRoutePath","devSettings","Object","keys","length","keepSessionOnReload","map","m","newComponent","delay","typing","theme","customMessageTypes","onInit","setTimeout","isWebchatOpen","end","document","getElementById","scrollIntoView","JSON","stringify","messagesJSON","openWebview","webviewComponent","params","emojiClick","code","emoji","String","fromCodePoint","textArea","current","value","focus","closeWebview","options","payload","sendPayload","path","handleMenu","handleEmoji","emojiPickerComponent","display","alignItems","padding","cursor","LogoEmoji","persistentMenuComponent","values","persistentMenu","e","i","closeMenu","url","webview","label","persistentMenuLogo","justifyContent","flex","LogoMenu","checkBlockInput","input","Array","isArray","blockInputs","rule","match","some","regex","test","data","backgroundColor","borderColor","message","sendInput","inputMessage","onUserInput","addBotResponse","response","r","action","_botonic_action","handoff","startsWith","setTyping","addUserMessage","openWebchat","closeWebchat","openWebviewApi","component","resolveCase","prevSession","split","sendText","text","onKeyDown","event","keyCode","shiftKey","preventDefault","webviewRequestContext","getString","stringId","setLocale","locale","webviewParams","onOpen","onClose","CustomTriggerButton","customTrigger","triggerImage","Logo","triggerButtonImage","triggerButton","position","background","borderRadius","overflow","width","height","bottom","paddding","right","triggerButtonStyle","maxWidth","maxHeight","webchatHeader","boxShadow","webchatMessageList","messagesComponents","webchatReplies","replies","alignReplies","wrapReplies","top","inputUserArea","minHeight","borderTop","textPlaceholder","location","hostname","fontSize","border","resize","outline","paddingLeft","emojiPicker","webchatWebview","webviewStyle","margin","flexDirection","style","error","fontFamily"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect,\n  useImperativeHandle,\n  forwardRef\n} from 'react'\nimport Textarea from 'react-textarea-autosize'\nimport { useLocalStorage } from '@rehooks/local-storage'\nimport uuid from 'uuid/v4'\nimport UAParser from 'ua-parser-js'\nimport { Flex } from '@rebass/grid'\nimport { params2queryString } from '@botonic/core'\nimport { WebchatContext, RequestContext } from '../contexts'\nimport { Text } from '../components/text'\nimport { TypingIndicator } from '../components/typingIndicator'\nimport { Handoff } from '../components/handoff'\nimport { useWebchat, useTyping, usePrevious } from './hooks'\nimport { WebchatHeader } from './header'\nimport { PersistentMenu } from '../components/persistentMenu'\nimport { WebchatMessageList } from './messageList'\nimport { WebchatReplies } from './replies'\nimport { WebviewContainer } from './webview'\nimport { isDev, msgToBotonic, staticAsset } from '../utils'\nimport Logo from './botonic_react_logo100x100.png'\nimport EmojiPicker from 'emoji-picker-react'\nimport LogoMenu from './menuButton.svg'\nimport LogoEmoji from './emojiButton.svg'\nimport { Button } from '../components/button'\n\nconst createUser = () => {\n  let parser = new UAParser()\n  let ua = parser.getResult()\n  let name = `${ua.os.name} ${ua.browser.name}`\n  if (ua.device && ua.device.type) name = `${ua.device.type} ${name}`\n  return {\n    id: uuid(),\n    name\n  }\n}\n\nexport const Webchat = forwardRef((props, ref) => {\n  const {\n    webchatState,\n    addMessage,\n    addMessageComponent,\n    updateMessage,\n    updateReplies,\n    updateLatestInput,\n    updateTyping,\n    updateWebview,\n    updateSession,\n    updateUser,\n    updateLastRoutePath,\n    updateHandoff,\n    updateTheme,\n    updateDevSettings,\n    toggleWebchat,\n    setError,\n    openWebviewT,\n    closeWebviewT\n  } = props.webchatHooks || useWebchat()\n  const { initialSession, initialDevSettings, onStateChange } = props\n  const [botonicState, saveState, deleteState] = useLocalStorage('botonicState')\n  const [menuIsOpened, setMenuIsOpened] = useState(false)\n  const [emojiIsOpened, setEmojiIsOpened] = useState(false)\n  // Load initial state from localStorage\n  useEffect(() => {\n    let { user, messages, session, lastRoutePath, devSettings } =\n      botonicState || {}\n    if (!user || Object.keys(user).length == 0) user = createUser()\n    updateUser(user)\n    if (\n      !devSettings ||\n      Object.keys(devSettings).length == 0 ||\n      devSettings.keepSessionOnReload\n    ) {\n      if (messages) {\n        messages.map(m => {\n          addMessage(m)\n          let newComponent = msgToBotonic(\n            { ...m, delay: 0, typing: 0 },\n            props.theme.customMessageTypes\n          )\n          if (newComponent) addMessageComponent(newComponent)\n        })\n      }\n      if (session) updateSession(session)\n      else if (initialSession) updateSession(initialSession)\n      if (lastRoutePath) updateLastRoutePath(lastRoutePath)\n    } else updateSession(initialSession)\n    if (devSettings) updateDevSettings(devSettings)\n    else if (initialDevSettings) updateDevSettings(initialDevSettings)\n    if (props.onInit) setTimeout(() => props.onInit(), 100)\n  }, [])\n\n  useEffect(() => {\n    if (!webchatState.isWebchatOpen) return\n    setTimeout(() => {\n      let end = document.getElementById('messages-end')\n      if (end) {\n        end.scrollIntoView()\n      }\n    })\n  }, [webchatState.isWebchatOpen])\n\n  useEffect(() => {\n    if (onStateChange && typeof onStateChange === 'function')\n      onStateChange(webchatState)\n    saveState(\n      JSON.stringify({\n        user: webchatState.user,\n        messages: webchatState.messagesJSON,\n        session: webchatState.session,\n        lastRoutePath: webchatState.lastRoutePath,\n        devSettings: webchatState.devSettings\n      })\n    )\n  }, [\n    webchatState.user,\n    webchatState.messagesJSON,\n    webchatState.session,\n    webchatState.lastRoutePath,\n    webchatState.devSettings\n  ])\n\n  useTyping({ webchatState, updateTyping, updateMessage })\n\n  useEffect(() => {\n    updateTheme({ ...webchatState.theme, ...props.theme })\n  }, [props.theme])\n\n  const openWebview = (webviewComponent, params) =>\n    updateWebview(webviewComponent, params)\n\n  const emojiClick = code => {\n    const emoji = String.fromCodePoint(`0x${code}`)\n    textArea.current.value += emoji\n    textArea.current.focus()\n  }\n\n  const closeWebview = options => {\n    updateWebview()\n    textArea.current.focus()\n    if (options && options.payload) {\n      sendPayload(options.payload)\n    } else if (options && options.path) {\n      let params = ''\n      if (options.params) params = params2queryString(options.params)\n      sendPayload(`__PATH_PAYLOAD__${options.path}?${params}`)\n    }\n  }\n\n  const handleMenu = () => {\n    setEmojiIsOpened(false)\n    menuIsOpened ? setMenuIsOpened(false) : setMenuIsOpened(true)\n  }\n  const handleEmoji = () => {\n    emojiIsOpened ? setEmojiIsOpened(false) : setEmojiIsOpened(true)\n  }\n  const emojiPickerComponent = () => {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          padding: 15\n        }}\n      >\n        <img\n          style={{\n            cursor: 'pointer'\n          }}\n          src={staticAsset(LogoEmoji)}\n          onClick={() => handleEmoji()}\n        />\n      </div>\n    )\n  }\n\n  const persistentMenuComponent = () => (\n    <PersistentMenu>\n      {Object.values(props.persistentMenu).map((e, i) => {\n        return (\n          <Button\n            onClick={closeMenu}\n            url={e.url}\n            webview={e.webview}\n            payload={e.payload}\n            key={i}\n          >\n            {Object.values(e.label)}\n          </Button>\n        )\n      })}\n      <Button onClick={closeMenu}>Cancel</Button>\n    </PersistentMenu>\n  )\n  const persistentMenuLogo = () => (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 'none',\n        cursor: 'pointer',\n        padding: 18\n      }}\n      onClick={() => handleMenu()}\n    >\n      <img src={staticAsset(LogoMenu)} />\n    </div>\n  )\n\n  const checkBlockInput = input => {\n    if (!Array.isArray(props.blockInputs)) return\n    for (let rule of props.blockInputs) {\n      if (rule.match.some(regex => regex.test(input.data))) {\n        addMessageComponent(\n          <Text\n            id={input.id}\n            from='user'\n            style={{ backgroundColor: '#585757', borderColor: '#585757' }}\n          >\n            {rule.message}\n          </Text>\n        )\n        updateReplies(false)\n        return true\n      }\n    }\n  }\n  const closeMenu = () => {\n    setMenuIsOpened(false)\n  }\n\n  const sendInput = async input => {\n    let inputMessage = null\n    if (!input || Object.keys(input).length == 0) return\n    if (!input.id) input.id = uuid()\n    //if is a text we check if it is a RE\n    if (input.type === 'text') {\n      if (checkBlockInput(input)) return\n      inputMessage = (\n        <Text id={input.id} payload={input.payload} from='user'>\n          {input.data}\n        </Text>\n      )\n    }\n    if (inputMessage) {\n      addMessageComponent(inputMessage)\n    }\n    props.onUserInput &&\n      props.onUserInput({\n        user: webchatState.user,\n        input,\n        session: webchatState.session,\n        lastRoutePath: webchatState.lastRoutePath\n      })\n    updateLatestInput(input)\n    updateReplies(false)\n    setMenuIsOpened(false)\n    setEmojiIsOpened(false)\n  }\n\n  /* This is the public API this component exposes to its parents\n  https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n  */\n\n  useImperativeHandle(ref, () => ({\n    addBotResponse: ({ response, session, lastRoutePath }) => {\n      updateTyping(false)\n      if (Array.isArray(response)) response.map(r => addMessageComponent(r))\n      else if (response) addMessageComponent(response)\n      if (session) {\n        updateSession(session)\n        let action = session._botonic_action || ''\n        let handoff = action.startsWith('create_case')\n        if (handoff && isDev()) addMessageComponent(<Handoff />)\n        updateHandoff(handoff)\n      }\n      if (lastRoutePath) updateLastRoutePath(lastRoutePath)\n    },\n    setTyping: typing => updateTyping(typing),\n    addUserMessage: message => sendInput(message),\n    updateUser: user => {\n      updateSession({\n        ...webchatState.session,\n        user: { ...webchatState.session.user, ...user }\n      })\n      updateUser({ ...webchatState.user, ...user })\n    },\n    openWebchat: () => toggleWebchat(true),\n    closeWebchat: () => toggleWebchat(false),\n    toggleWebchat: () => toggleWebchat(!webchatState.isWebchatOpen),\n    openWebviewApi: component => openWebviewT(component),\n    setError\n  }))\n\n  const resolveCase = () => {\n    updateHandoff(false)\n    updateSession({ ...webchatState.session, _botonic_action: null })\n  }\n\n  const prevSession = usePrevious(webchatState.session)\n  useEffect(() => {\n    // Resume conversation after handoff\n    if (\n      prevSession &&\n      prevSession._botonic_action &&\n      !webchatState.session._botonic_action\n    ) {\n      let action = prevSession._botonic_action.split(':')\n      sendPayload(action[action.length - 1])\n    }\n  }, [webchatState.session._botonic_action])\n\n  const sendText = async (text, payload) => {\n    if (!text) return\n    let input = { type: 'text', data: text, payload }\n    await sendInput(input)\n  }\n\n  const sendPayload = async payload => {\n    if (!payload) return\n    let input = { type: 'postback', payload }\n    await sendInput(input)\n  }\n\n  const onKeyDown = event => {\n    if (event.keyCode == 13 && event.shiftKey == false) {\n      event.preventDefault()\n      sendText(textArea.current.value)\n      textArea.current.value = ''\n    }\n  }\n\n  let webviewRequestContext = {\n    getString: stringId => props.getString(stringId, webchatState.session),\n    setLocale: locale => props.getString(locale, webchatState.session),\n    session: webchatState.session || {},\n    params: webchatState.webviewParams || {},\n    closeWebview: closeWebview\n  }\n\n  useEffect(() => {\n    if (webchatState.isWebchatOpen && props.onOpen) props.onOpen()\n    if (!webchatState.isWebchatOpen && props.onClose) props.onClose()\n  }, [webchatState.isWebchatOpen])\n\n  const textArea = useRef()\n\n  const CustomTriggerButton = webchatState.theme.customTrigger\n  let triggerImage = Logo\n  if (props.theme && 'triggerButtonImage' in props.theme)\n    triggerImage = props.theme.triggerButtonImage\n  if (webchatState.theme && 'triggerButtonImage' in webchatState.theme)\n    triggerImage = webchatState.theme.triggerButtonImage\n  const triggerButton = CustomTriggerButton ? (\n    <CustomTriggerButton />\n  ) : (\n    <div\n      style={{\n        cursor: 'pointer',\n        position: 'fixed',\n        background: 'white',\n        borderRadius: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        width: 65,\n        height: 65,\n        bottom: 20,\n        paddding: 8,\n        right: 10,\n        ...webchatState.theme.triggerButtonStyle\n      }}\n    >\n      {triggerImage && (\n        <img\n          style={{ maxWidth: '100%', maxHeight: '100%' }}\n          src={staticAsset(triggerImage)}\n        />\n      )}\n    </div>\n  )\n\n  const webchatHeader = () => (\n    <WebchatHeader\n      style={{\n        borderRadius: '8px 8px 0 0',\n        boxShadow: 'rgba(176, 196, 222, 0.5) 0px 2px 5px',\n        height: 36,\n        flex: 'none'\n      }}\n      onCloseClick={() => {\n        toggleWebchat(false)\n      }}\n    />\n  )\n  const webchatMessageList = () => (\n    <WebchatMessageList\n      style={{ flex: 1 }}\n      messages={webchatState.messagesComponents}\n    >\n      {webchatState.typing && <TypingIndicator />}\n      <div id='messages-end' />\n    </WebchatMessageList>\n  )\n  const webchatReplies = () => (\n    <WebchatReplies\n      replies={webchatState.replies}\n      align={webchatState.theme.alignReplies}\n      wrap={webchatState.theme.wrapReplies}\n    />\n  )\n  const emoji = () => (\n    <div\n      style={{\n        width: webchatState.theme.width || '100%',\n        maxWidth: 400,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        position: 'absolute',\n        right: 0,\n        top: -332\n      }}\n    >\n      <EmojiPicker onEmojiClick={emojiClick} />\n    </div>\n  )\n  const inputUserArea = () => {\n    return (\n      <div\n        style={{\n          minHeight: 52,\n          display: 'flex',\n          position: 'relative',\n          borderTop: '1px solid rgba(0, 0, 0, 0.4)'\n        }}\n      >\n        {emojiIsOpened && emoji()}\n        {props.persistentMenu && persistentMenuLogo()}\n        <div\n          style={{\n            display: 'flex',\n            flex: '1 1 auto',\n            alignItems: 'center'\n          }}\n        >\n          <Textarea\n            name='text'\n            maxRows={4}\n            wrap='soft'\n            maxLength='1000'\n            placeholder={webchatState.theme.textPlaceholder}\n            autoFocus={location.hostname === 'localhost'}\n            inputRef={textArea}\n            onKeyDown={e => onKeyDown(e)}\n            style={{\n              display: 'flex',\n              fontSize: 14,\n              width: '100%',\n              border: 'none',\n              resize: 'none',\n              overflow: 'auto',\n              outline: 'none',\n              flex: '1 1 auto',\n              padding: 10,\n              paddingLeft: props.persistentMenu ? 0 : 10\n            }}\n          />\n        </div>\n        {props.emojiPicker && emojiPickerComponent()}\n      </div>\n    )\n  }\n  const webchatWebview = () => (\n    <RequestContext.Provider value={webviewRequestContext}>\n      <WebviewContainer\n        style={{\n          ...props.theme.webviewStyle\n        }}\n        webview={webchatState.webview}\n      />\n    </RequestContext.Provider>\n  )\n\n  return (\n    <WebchatContext.Provider\n      value={{\n        sendText,\n        sendPayload,\n        openWebview,\n        resolveCase,\n        webchatState,\n        addMessage,\n        toggleWebchat,\n        updateMessage,\n        updateReplies,\n        updateLatestInput\n      }}\n    >\n      {!webchatState.isWebchatOpen && (\n        <div\n          onClick={event => {\n            toggleWebchat(true)\n            event.preventDefault()\n          }}\n        >\n          {triggerButton}\n        </div>\n      )}\n      {webchatState.isWebchatOpen && (\n        <div\n          style={{\n            position: 'fixed',\n            right: 20,\n            bottom: 20,\n            width: webchatState.width,\n            height: webchatState.height,\n            margin: 'auto',\n            backgroundColor: 'white',\n            borderRadius: '10px',\n            boxShadow: '0 0 12px rgba(0,0,0,.15)',\n            display: 'flex',\n            flexDirection: 'column',\n            ...webchatState.theme.style\n          }}\n        >\n          {webchatHeader()}\n          {webchatState.error.message ? (\n            <div\n              style={{\n                flex: '1 1 auto',\n                display: 'flex',\n                backgroundColor: 'white',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontFamily: 'Arial, Helvetica, sans-serif'\n              }}\n            >\n              Error: {webchatState.error.message}\n            </div>\n          ) : (\n            <>\n              {webchatMessageList()}\n              {webchatState.replies &&\n                Object.keys(webchatState.replies).length > 0 &&\n                webchatReplies()}\n              {menuIsOpened && persistentMenuComponent()}\n              {!webchatState.handoff && inputUserArea()}\n              {webchatState.webview && webchatWebview()}\n            </>\n          )}\n        </div>\n      )}\n    </WebchatContext.Provider>\n  )\n})\n"],"file":"webchat.js"}