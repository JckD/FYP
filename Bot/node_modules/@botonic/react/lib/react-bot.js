"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReactBot = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _core = require("@botonic/core");

var _text = require("./components/text");

var _contexts = require("./contexts");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ReactBot =
/*#__PURE__*/
function (_CoreBot) {
  (0, _inherits2["default"])(ReactBot, _CoreBot);

  function ReactBot(options) {
    var _this;

    (0, _classCallCheck2["default"])(this, ReactBot);
    return _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ReactBot).call(this, _objectSpread({
      defaultRoutes: [{
        path: '404',
        action: function action() {
          return _react["default"].createElement(_text.Text, null, "I don't understand you");
        }
      }],
      renderer: function renderer(args) {
        return _this.renderReactActions(args);
      }
    }, options)));
  }

  (0, _createClass2["default"])(ReactBot, [{
    key: "renderReactActions",
    value: function () {
      var _renderReactActions = (0, _asyncToGenerator2["default"])(
      /*#__PURE__*/
      _regenerator["default"].mark(function _callee(_ref) {
        var request, actions, renderedActions, props, renderedAction, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, Action;

        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                request = _ref.request, actions = _ref.actions;
                renderedActions = [];
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context.prev = 5;
                _iterator = actions[Symbol.iterator]();

              case 7:
                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                  _context.next = 23;
                  break;
                }

                Action = _step.value;

                if (!Action) {
                  _context.next = 20;
                  break;
                }

                if (!Action.botonicInit) {
                  _context.next = 16;
                  break;
                }

                _context.next = 13;
                return Action.botonicInit(request);

              case 13:
                _context.t0 = _context.sent;
                _context.next = 17;
                break;

              case 16:
                _context.t0 = {};

              case 17:
                props = _context.t0;
                renderedAction = _react["default"].createElement(_contexts.RequestContext.Provider, {
                  value: request
                }, _react["default"].createElement(Action, props));
                renderedActions.push(renderedAction);

              case 20:
                _iteratorNormalCompletion = true;
                _context.next = 7;
                break;

              case 23:
                _context.next = 29;
                break;

              case 25:
                _context.prev = 25;
                _context.t1 = _context["catch"](5);
                _didIteratorError = true;
                _iteratorError = _context.t1;

              case 29:
                _context.prev = 29;
                _context.prev = 30;

                if (!_iteratorNormalCompletion && _iterator["return"] != null) {
                  _iterator["return"]();
                }

              case 32:
                _context.prev = 32;

                if (!_didIteratorError) {
                  _context.next = 35;
                  break;
                }

                throw _iteratorError;

              case 35:
                return _context.finish(32);

              case 36:
                return _context.finish(29);

              case 37:
                return _context.abrupt("return", renderedActions);

              case 38:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[5, 25, 29, 37], [30,, 32, 36]]);
      }));

      function renderReactActions(_x) {
        return _renderReactActions.apply(this, arguments);
      }

      return renderReactActions;
    }()
  }]);
  return ReactBot;
}(_core.CoreBot);

exports.ReactBot = ReactBot;
//# sourceMappingURL=react-bot.js.map