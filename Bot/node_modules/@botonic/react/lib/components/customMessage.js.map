{"version":3,"sources":["../../src/components/customMessage.jsx"],"names":["customMessage","name","CustomMessageComponent","component","CustomMessage","props","id","json","children","WrappedComponent","customMessageProps","customTypeName","deserialize","msg","data"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAiD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAA7BC,sBAA6B,QAAxCC,SAAwC;;AAC5E,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,WACzB,gCAAC,gBAAD;AAAS,MAAA,EAAE,EAAEA,KAAK,CAACC,EAAnB;AAAuB,MAAA,IAAI,EAAED,KAAK,CAACE,IAAnC;AAAyC,MAAA,IAAI,EAAC;AAA9C,OACGF,KAAK,CAACG,QADT,CADyB;AAAA,GAA3B;;AAKA,MAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAJ,KAAK,EAAI;AAAA,QACxBC,EADwB,GACMD,KADN,CACxBC,EADwB;AAAA,QACjBI,kBADiB,6CACML,KADN;AAE9B,WACE,gCAAC,aAAD;AAAe,MAAA,EAAE,EAAEC,EAAnB;AAAuB,MAAA,IAAI,oBAAOD,KAAP;AAAcM,QAAAA,cAAc,EAAEV;AAA9B;AAA3B,OACE,gCAAC,sBAAD,EAA4BS,kBAA5B,EACGL,KAAK,CAACG,QADT,CADF,CADF;AAOD,GATD;;AAUAC,EAAAA,gBAAgB,CAACE,cAAjB,GAAkCV,IAAlC;;AACAQ,EAAAA,gBAAgB,CAACG,WAAjB,GAA+B,UAAAC,GAAG;AAAA,WAChC,gCAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEA,GAAG,CAACP,EAA1B;AAA8B,MAAA,IAAI,EAAEO,GAAG,CAACC;AAAxC,OAAkDD,GAAG,CAACC,IAAtD,EADgC;AAAA,GAAlC;;AAGA,SAAOL,gBAAP;AACD,CArBM","sourcesContent":["import React from 'react'\nimport { Message } from './message'\n\nexport const customMessage = ({ name, component: CustomMessageComponent }) => {\n  const CustomMessage = props => (\n    <Message id={props.id} json={props.json} type='custom'>\n      {props.children}\n    </Message>\n  )\n  let WrappedComponent = props => {\n    let { id, ...customMessageProps } = props\n    return (\n      <CustomMessage id={id} json={{ ...props, customTypeName: name }}>\n        <CustomMessageComponent {...customMessageProps}>\n          {props.children}\n        </CustomMessageComponent>\n      </CustomMessage>\n    )\n  }\n  WrappedComponent.customTypeName = name\n  WrappedComponent.deserialize = msg => (\n    <WrappedComponent id={msg.id} json={msg.data} {...msg.data} />\n  )\n  return WrappedComponent\n}\n"],"file":"customMessage.js"}